--1. 단일행 함수 
--단일행 함수는 하나의 데이터를 받아서 하나의 결과값을 리턴하는 함수이다. 
--단일행 함수에는 문자함수, 숫자함수, 날짜함수, 일반함수 등이 존재한다.
--1-1. 문자함수 
 
--LOWER : 영문자를 소문자로 변환해서 리턴
--UPPER : 영문자를 대문자로 변환해서 리턴
--INICAP : 영문자의 첫 글자만 대문자로 나머지 글자는 소문자로 변환해서 리턴
SELECT DNO 
	 , LOWER(DNAME)
	 , UPPER(DNAME)
	 , INITCAP(DNAME)
	 FROM DEPT;
	 
--부서이름이 대문자인지 소문자인지 알 수 없을 때 
--LOWER를 사용해서 소문자로 비교
SELECT DNO
	 , DNAME 
	 , LOC 
	 , DIRECTOR 
	 FROM DEPT 
	 WHERE LOWER(DNAME) = 'erp';
	 
--1-2. 문자 연산 함수 
--CONCAT (테이터 1, 테이터2) : 테이터 1과 테이터 2가 결합된 새로운 데이터 리턴

SELECT  CONCAT(SNAME, AVR)
	FROM STUDENT;
	
--CONCAT 함수는 매개변수를 두개만 받을 수 있어서 여러개의 데이터나 다른 표현을 넣고 싶을 떄는 ||와 조합하여 사용한다. 
	
SELECT  CONCAT(SNAME, ' : ' || AVR)
	FROM STUDENT;

--CONCAT을 이용해서 부서번호, 부서이름, 지역을 부서번호 : 부서이름 : 지역 형태로 조회하세요. 
SELECT CONCAT(DNO, ' : ' || DNAME || ' : ' || LOC) AS "부서번호:부서이름:지역"
	FROM DEPT;

--SUBSTR(데이터, 시작인덱스, 개수) : 받아온 데이터에서 시작 인덱스에서 개수만큼 데이터를 잘라서 리턴 
--교수중에 정교수인 교수의 교수번호, 교수이름, 직위조회 
SELECT PNO
	 , PNAME
	 , ORDERS
	 FROM PROFESSOR
	 WHERE SUBSTR(ORDERS,1 ,1 ) ='정';
	
	
SELECT ENAME 
	 , SUBSTR(ENAME, 2 ) --2번째 글자부터 모두 
	 , SUBSTR(ENAME, -2) --뒤에서 두번째 글자부터 모두 
	 , SUBSTR(ENAME, 1, 2) --첫번쨰 글자부터 두글자 
	 , SUBSTR(ENAME, -2, 2) --뒤에서 두번째 글자부터 두글자
	FROM EMP;

--LENTH: 데이터의 길이를 리턴 
--LENTHB: 데이터의길이를 BYTE단위로 리턴 
--오라클의 기본 문자셋은 AL32UTF8 => 영어를 제외한 다른 문자는 3BYTE씩 계산 
SELECT DNAME
	 , LENGTH(DNAME)
	 , LENGTHB(DNAME)
	 FROM DEPT;

--INSTR(데이터, 문자): 데이터에서 주어진 문자의 위치를 리턴
--DUAL 테이블 : 오라클에서 제공하는 가상의 테이블.
--			간단하게 날짜나 연산 또는 결과값을 보기위해서 사용
--			DUAL 테이블의 소유자는 SYS계정이지만 모든 사용자에서 사용이 가능하다. 
SELECT INSTR('DATABASE', 'A') -- 첫번째 A의 위치
	 , INSTR('DATABASE', 'A', 3) -- 세번째 글자인 T다음의 첫번째 A의 위치
	 , INSTR('DATABASE','A',1,3) --첫번째 글자인 D다음의 세번째 A의 위치 
	 FROM DUAL;

--TRIM 
--TRIM(leading 접두어 FROM 데이터) : 데이터에서 접두어에 해당하는 값을 앞에서 제거 
--TRIM(trailing 접미어 FROM 데이터) : 데이터에서 접미어에 해당하는 값을 뒤에서 제거 
--TRIM(both 문자 FROM 데이터) : 데이터에서 문자에 해당하는 값을 앞, 뒤에서 제거 
--TRIM(데이터) : 데이터에서 앞, 뒤의 공백 제거 
	
SELECT TRIM(LEADING '0' FROM '00012300')
	 , TRIM(TRAILING '0' FROM '000123000')
	 , TRIM(BOTH '0' FROM '000123000')  --BOTH 는 생략이 가능
	 , TRIM('    0 0 0 1 2 3    ')
	 FROM DUAL;
	
--LPAD(데이터, 길이, 문자 ): 지정한 길이에서 데이터의 길이를 뺸 나머지 길이만큼 문자로 앞에 채워주는 함수
--RPAD(데이터, 길이, 문자) : 지정한 길이에서 데이터의 길이를 뺀 나머지 길이만큼 문자로 뒤에 채워주는 함수
--LPAD, RPAD : 영어를 제외한 나머지 문자를 2BYTE계산 , 길이는 BYTE단위로 지정한다.
SELECT LPAD(ENAME, 10, '*')
	 , RPAD(ENAME, 10, '*')
	 FROM EMP;

	
--지정한 길이가 데이터의 길이보다 작거나 같으면 문자를 붙이지 않는다.	
SELECT LPAD(ENAME, 6, '*')
	 , RPAD(ENAME, 6, '*')
	 FROM EMP;

--사원의 사원번호, 사원이름을 조회하는데 사원이름에서 마지막 한 글자만 빼고 조회
SELECT ENO
	 , SUBSTR(ENAME ,1, LENGTH(ENAME) -1) 
	 FROM EMP;
	
--1-3. 문자열 치환함수 
--TRANSLATE 
--치환될 문자에 포함된 모든 문자를 치환한다.
SELECT  TRANSLATE('World of War', 'Wo' , '--')
	FROM DUAL;
	
--REPLACE
--치환될 문자열과 동일한 문자열을 치환한다. 
SELECT  REPLACE('World of War', 'Wo' , '--')
	FROM DUAL;

--1-4. 숫자 함수 
--ROUND(데이터, 소수점 자리수) : 지정된 소수점 자리수까지 반올림하여 반환
SELECT ROUND(123.45678,3)
	FROM DUAL;

--학생의 학생번호 , 학생이름, 전공, 학년 , 4.5로 치환된 평점을 조회하는데 평점은 소수점 두째 짜리까지
SELECT SNO 
	, SNAME 
	, MAJOR 
	, SYEAR
	, AVR
	, ROUND(AVR*1.125, 2)  "4.5만점"
	FROM STUDENT;

--TRUNC(데이터 , 소수점 자리수) : 지정된 소수점 자리수까지 버림하여 반환
SELECT TRUNC(123.45678, 3)
	FROM DUAL;

--MOD(데이터 1, 데이터2) : 데이터 1에서 데이터2를 나눈 나머지 리턴 
SELECT MOD(10, 4)
	FROM DUAL;

--POWER(데이터 1, 데이터2 ): 데이터 1의 데이터2 제곱한 값을 리턴(데이터1의 데이터 2승)
SELECT POWER(3,3)
	FROM DUAL;

--CEIL(실수) : 데이터보다 큰 가장 작은 정수 리턴 

--FLOOR(데이터) :데이터보다 작은 가장 큰 정수 리턴 
SELECT CEIL(2.59)
	, FLOOR(2.59)
	FROM DUAL; 

--SQRT(데이터 ) : 데이터의 제곱근 값을 리턴 
SELECT  SQRT(9)
	, 	SQRT(25)
	, 	SQRT(100)
FROM DUAL;

--SIGN(데이터) : 데이터의 부호를 판단해주는 함수. 데이터가 음수면 -1, 양수면 1, 0이면 0을 리턴 
SELECT SIGN(-123)
	 , SIGN(0)
	 , SIGN(456)
	 FROM DUAL;

--1-5. 날짜 연산 

SELECT SYSDATE 
	, SYSDATE +100 --오늘날짜부터 100일 뒤 
	, SYSDATE -100 --오늘날짜부터 100일 전 
	, SYSDATE +3 /24 --현재시간으로부터 3시간 뒤 
	, SYSDATE -5 /24 --현재시간으로부터 5시간 전 
	, SYSDATE -TO_DATE('20230523', 'YYYYMMDD') --두 날짜간의 차이 
	--날짜에 TRUNC 함수를 사용하면 시간 분 초를 00:00:00으로 초기화한다. 
	, TRUNC(SYSDATE) -TO_DATE('20230523', 'YYYYMMDD')
	FROM DUAL;
	
--1999년 1월 1일부터 100일 뒤 까지 부임한 교수의 교수번호, 교수이름, 부임일자 조회

SELECT PNO
	 , PNAME 
	 , HIREDATE 
	 FROM PROFESSOR
	 WHERE HIREDATE BETWEEN TO_DATE('19990101','YYYYMMDD') 
	 AND TO_DATE('19910101','YYYYMMDD' )+100; 

--1-6. 날짜 함수 
--ROUND(날짜, 날짜 단위) : 지정한 날짜 단위까지의 날짜는 빼오고 나머지 날짜는 초기화. 날짜를 뺴올때 절반 이상 지났으면 반올림 된다.
SELECT ROUND(SYSDATE, 'DD')
	FROM DUAL; 

SELECT ROUND(TO_DATE('20241124', 'YYYYMMDD'), 'MM')
	FROM DUAL;

--TRUNC(날짜, 날짜단위): 지정한 날짜 단위까지의 날짜는 뺴오고 나머지 날짜는 초기화. 버려지는 날짜는 그냥 초기화.
SELECT SYSDATE 
	 , TRUNC(SYSDATE, 'YYYY')
	 , TRUNC(SYSDATE, 'MM')
	 , TRUNC(SYSDATE, 'DD')
	 FROM DUAL;
	










